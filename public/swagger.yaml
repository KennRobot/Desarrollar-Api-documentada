openapi: 3.0.0
info:
  title: API REST - Jugadores y Estadísticas
  description: API para gestionar jugadores, niveles, experiencia, logros y solicitudes de amistad en un videojuego.
  version: 1.0.0

servers:
  - url: https://tu-api-jugadores.onrender.com/api
    description: Servidor en Render

paths:
  /jugadores:
    get:
      summary: Obtener todos los jugadores
      description: Retorna una lista con todos los jugadores registrados.
      responses:
        "200":
          description: Lista de jugadores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Jugador"
        "500":
          description: Error al obtener los jugadores

    post:
      summary: Crear un nuevo jugador
      description: Registra un nuevo jugador en el sistema.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Jugador"
      responses:
        "201":
          description: Jugador creado exitosamente

  /jugadores/{id}:
    get:
      summary: Obtener jugador por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Información del jugador
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Jugador"
        "404":
          description: Jugador no encontrado

    put:
      summary: Actualizar jugador
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Jugador"
      responses:
        "200":
          description: Jugador actualizado

    delete:
      summary: Eliminar jugador
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Jugador eliminado correctamente

  /jugadores/{id}/experiencia:
    put:
      summary: Actualizar experiencia y nivel
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                experienciaGanada:
                  type: integer
                  example: 150
      responses:
        "200":
          description: Experiencia y nivel actualizados

  /jugadores/{id}/logros:
    post:
      summary: Agregar logro a jugador
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  example: "Primera victoria"
                descripcion:
                  type: string
                  example: "Ganó su primera partida"
      responses:
        "200":
          description: Logro agregado

  /jugadores/{id}/amigos:
    post:
      summary: Enviar solicitud de amistad
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                receptorId:
                  type: string
      responses:
        "200":
          description: Solicitud enviada

  /jugadores/{id}/solicitudes:
    get:
      summary: Obtener solicitudes de amistad
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de solicitudes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Solicitud"

components:
  schemas:
    Jugador:
      type: object
      properties:
        id:
          type: string
        nombre:
          type: string
        nivel:
          type: integer
        experiencia:
          type: integer
        logros:
          type: array
          items:
            $ref: "#/components/schemas/Logro"
        amigos:
          type: array
          items:
            type: string
        solicitudes:
          type: array
          items:
            $ref: "#/components/schemas/Solicitud"
      example:
        id: "123"
        nombre: "Jugador1"
        nivel: 5
        experiencia: 1500
        logros:
          - nombre: "Primera victoria"
            descripcion: "Ganó su primera partida"
        amigos: ["456", "789"]
        solicitudes:
          - de: "456"
            estado: "pendiente"

    Logro:
      type: object
      properties:
        nombre:
          type: string
        descripcion:
          type: string
      example:
        nombre: "Veterano"
        descripcion: "Jugó 100 partidas"

    Solicitud:
      type: object
      properties:
        de:
          type: string
        estado:
          type: string
          enum: [pendiente, aceptada, rechazada]
      example:
        de: "456"
        estado: "pendiente"
